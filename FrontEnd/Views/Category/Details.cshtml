@model FrontEnd.Models.CategoryViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>CategoryViewModel</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CategoryId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CategoryName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
@*        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Picture)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Picture)
        </dd>*@

         @{
            string imageBase64 = Convert.ToBase64String(Model.Picture);
            //que tipo de formato viene. si no es el formato correcto (jpg) va a salir un logo y no la imagen. 
            string imageSrc = string.Format("data:ContentType = image/jpg;base64,{0}", imageBase64);

            <img src="@imageSrc" width="500" height="500" />

        }
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new {  id = Model.CategoryId  }) |
    <a asp-action="Index">Back to List</a>
</div>
